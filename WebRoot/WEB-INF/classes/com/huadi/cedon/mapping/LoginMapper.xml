<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huadi.cedon.dao.LoginMapper">
  <resultMap id="BaseResultMap" type="com.huadi.cedon.model.Login">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="initial_time" jdbcType="TIMESTAMP" property="initialTime" />
    <result column="user_age" jdbcType="INTEGER" property="userAge" />
    <result column="user_sex" jdbcType="INTEGER" property="userSex" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="money" jdbcType="DOUBLE" property="money" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.huadi.cedon.model.Login">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_password, real_name, initial_time, user_age, user_sex, state, 
    money
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from login
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huadi.cedon.model.Login">
    insert into login (user_id, user_name, user_password, 
      real_name, initial_time, user_age, 
      user_sex, state, money, 
      remark)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{initialTime,jdbcType=TIMESTAMP}, #{userAge,jdbcType=INTEGER}, 
      #{userSex,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{money,jdbcType=DOUBLE}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huadi.cedon.model.Login">
    insert into login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="initialTime != null">
        initial_time,
      </if>
      <if test="userAge != null">
        user_age,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="initialTime != null">
        #{initialTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huadi.cedon.model.Login">
    update login
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="initialTime != null">
        initial_time = #{initialTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.huadi.cedon.model.Login">
    update login
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      initial_time = #{initialTime,jdbcType=TIMESTAMP},
      user_age = #{userAge,jdbcType=INTEGER},
      user_sex = #{userSex,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huadi.cedon.model.Login">
    update login
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      initial_time = #{initialTime,jdbcType=TIMESTAMP},
      user_age = #{userAge,jdbcType=INTEGER},
      user_sex = #{userSex,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>